{
    "collab_server" : "",
    "contents" : "rm(list=ls())\n#---------------      load preprocessed data files  ----------------------------#\n\nload('./Processed_data/Behavior_Qpar.Rdat') # load summarized behavior and Qlearning estimates\nload('./AG/Fitmodel/Fit_output/ConncetivityStrength_withBIC7models_MnoF.rdat')\n\n\n#---------------        load libraries              ----------------------------#\n\nlibrary(MASS)\nlibrary(plotrix)\nlibrary(reshape2)\nlibrary(nlme)\nrequire(multcomp)\nlibrary(ez)\n\n#-------------------------------------------------------------------------------#\n#--------------         Results Draft               ----------------------------#\n#-------------------------------------------------------------------------------#\n\n\n#--------------       1. Uncertainty and Conflict-induced slowing    --------------#\n\n# prepare\n# learning phase accuracy\nRL_perf=RL$learn[,7:9]\n\n# win,win (ww), lose,lose(ll), and win,lose (w,l)\n\nRLwl.med=cbind(rowMeans(RL[[3]][,c(4,5,12)],na.rm=T),\n               rowMeans(RL[[3]][,c(9,11,15)],na.rm=T),rowMeans(RL[[3]][,c(6:7,8,13,10,14)],na.rm=T),rowMeans(RL[[3]][,c(1:3,6:7,8,13,10,14)],na.rm=T))\n\nRLwl.mean=cbind(rowMeans(RL[[2]][,c(4,5,12)],na.rm=T),\n                rowMeans(RL[[2]][,c(9,11,15)],na.rm=T),rowMeans(RL[[2]][,c(6:7,8,13,10,14)],na.rm=T),rowMeans(RL[[2]][,c(1:3,6:7,8,13,10,14)],na.rm=T))\n\nRLwl.ac=cbind(rowMeans(RL[[4]][,c(4,6,12)],na.rm=T),\n              rowMeans(RL[[4]][,c(9,11,15)],na.rm=T),rowMeans(RL[[4]][,c(6:7,8,13,10,14)],na.rm=T),rowMeans(RL[[4]][,c(1:3,6:7,8,13,10,14)],na.rm=T))\n\n\n# wl.u = win loose pairs not previously seen during learning\ncolnames(RLwl.med)=c('ww','ll','wl.u','wl')\ncolnames(RLwl.mean)=c('ww','ll','wl.u','wl')\ncolnames(RLwl.ac)=c('ww','ll','wl.u','wl')\n\n# slowing \n# RT\ndiff.ll=RLwl.med[,2]-RLwl.med[,3]\ndiff.ww=RLwl.med[,1]-RLwl.med[,3]\n\n# accuracy\ndiff.ll.ac=RLwl.ac[,3]-RLwl.ac[,2]\ndiff.ww.ac=RLwl.ac[,3]-RLwl.ac[,1]\n\nslowing=cbind(diff.ll,diff.ww, diff.ll.ac, diff.ww.ac)\n\n\n# test\n# is there a main effect of condition on \n#accuracy: yes -> wl differs from ww and ll \nRL.av.ac=as.data.frame(as.table(RLwl.ac[,1:3]))\ncolnames(RL.av.ac)=c('ppn','cond','AC')\nlme_ac=lme(AC~cond,data=RL.av.ac,random=~1|ppn)\nanova(lme_ac) \n# dit is precies hetzelfde als repeated measures anova spps\nsummary(glht(lme_ac, linfct=mcp(cond = \"Tukey\")), \n        test = adjusted(type = \"bonferroni\"))\t\n\n\n#RT: yes -> ll differs from wl and ww\nRL.av.med=as.data.frame(as.table(RLwl.med[,1:3]))\ncolnames(RL.av.med)=c('ppn','cond','RT')\nlme_medRT=lme(RT~cond,data=RL.av.med,random=~1|ppn)\nanova(lme_medRT) \n# dit is precies hetzelfde als repeated measures anova spps df(2,88)\nsummary(glht(lme_medRT, linfct=mcp(cond = \"Tukey\")), \n        test = adjusted(type = \"bonferroni\"))\n\n#----------- startegy and learning phase accuracy --------------#\n# beta and learningphase accuracy\n#apply(RL_perf,2,mean);apply(RL_perf,2,sd)\ncor.test(RL.model[[1]][,1], RL_perf[,1]); #AB learn\ncor.test(RL.model[[1]][,1], RL_perf[,2]);#cd learn\ncor.test(RL.model[[1]][,1], RL_perf[,3])#ef learn\n\n#----------- RM anova with Strategy and Condition --------------#\n\n\n# prepare data\nACRT=merge(RL.av.ac, RL.av.med)\nav.beta=as.data.frame(as.table(RL.model[[1]][,1]))\ncolnames(av.beta)=c('ppn','beta')\nav.beta.beh= merge(ACRT,av.beta)\n\n# accuracy, yes! main effect beta,cond, and interaction\nAC_beta.av=ezANOVA(data=av.beta.beh,dv=AC,within=cond,between=beta,wid=ppn)\nprint(AC_beta.av)\n\n# RT, yes! main effect beta,cond, and interaction\nRT_beta.av=ezANOVA(data=av.beta.beh,dv=RT,within=cond,\n                   between=beta,wid=ppn, return_aov = T)\nprint(RT_beta.av)\n\n# lme results are same as ezANOVA (just checking :)\nRT_ph=lme(RT~cond*beta,data= av.beta.beh,random=~1|ppn/cond)\nanova(RT_ph)\n\n#----- group split comparisons to illustrate interaction conflict*strategy ------------#\n\n# Expoit/Explore\n\n# group split accuracy\nExplore.ac= RLwl.ac[RL.model[[1]][,1]<median(RL.model[[1]][,1]),1:3]\nExploit.ac= RLwl.ac[RL.model[[1]][,1]>median(RL.model[[1]][,1]),1:3]\nbar_error_group=rbind(colMeans(Exploit.ac),colMeans(Explore.ac))\nrownames(bar_error_group)=c('Exploit','Explore')\n\n# group split RT\nExplore= RLwl.med[RL.model[[1]][,1]<median(RL.model[[1]][,1]),1:3]\nExploit= RLwl.med[RL.model[[1]][,1]>median(RL.model[[1]][,1]),1:3]\nbar_error_group_RT=rbind(colMeans(Exploit),colMeans(Explore))\nrownames(bar_error_group_RT)=c('Exploit','Explore')\n\nsbar=rbind(apply(Explore,2,sd)/sqrt(length(Explore[,1])),apply(Exploit,2,sd)/sqrt(length(Exploit[,1])))\nsbarRT=rbind(apply(Explore,2,sd)/sqrt(length(Explore[,1])),apply(Exploit,2,sd)/sqrt(length(Exploit[,1])))\n\n# for plot\n#RT\nt.test(Exploit[,2],Explore[,2],var.equal=T) # p=0.001 \nt.test(Exploit[,3],Explore[,3],var.equal=T) # p=0.04\nt.test(Exploit[,1],Explore[,1],var.equal=T) # p=0.09\n\n#Accuracy\nt.test(Exploit.ac[,1],Explore.ac[,1],var.equal=T) # p=0.002\nt.test(Exploit.ac[,3],Explore.ac[,3],var.equal=T) # p=0.000\nt.test(Exploit.ac[,2],Explore.ac[,2],var.equal=T) # p=0.08 \n\n\n\n#--------------       2. Control and Conflict-induced slowing    --------------#\n\n# make data.frame where extra subjects in RL task are excluded\n# frist provide descriptives stop task\n\n# Get stop signal descriptives\ncolMeans(STOP) \napply(STOP,2,sd)\n\n# paired t.test to evaluate horce race MRT>MSR\nt.test(STOP[,'MRT'],STOP[,'MSR'],paired=T) # valid, failed stops are faster\n\n\n# what is the relationship between control and learning\nReg.data=data.frame(\n  ll_RT=RLwl.med[-which(rownames(RLwl.med)%in%Ex.stop),'ll'],\n  ww_RT=RLwl.med[-which(rownames(RLwl.med)%in%Ex.stop),'ww'],\n  wl_RT=RLwl.med[-which(rownames(RLwl.med)%in%Ex.stop),'wl.u'],\n  ll_ac=RLwl.ac[-which(rownames(RLwl.med)%in%Ex.stop),'ll'],\n  ww_ac=RLwl.ac[-which(rownames(RLwl.med)%in%Ex.stop),'ww'],\n  wl_ac=RLwl.ac[-which(rownames(RLwl.med)%in%Ex.stop),'wl.u'],\n  ll_slrt=slowing[-which(rownames(slowing)%in%Ex.stop),'diff.ll'],\n  SSRT=STOP[,'SSRT'],\n  Beta=RL.model[[1]][-which(rownames(RL.model[[1]])%in%Ex.stop),'Beta'])\n\n\n# robust regression\n# ll RT ~ SSRT\nrobreg_stop.llrt=rlm(ll_RT~SSRT,data=Reg.data)\nreg.sum=summary(robreg_stop.llrt)\nrl.dd=data.frame(reg.sum$coefficients)\nrl.dd$pval=2*pt(abs(rl.dd$t.value),reg.sum$df[2],lower.tail=F)\n# round(rl.dd,digits=3) # p=0.002, t(41)=3.36\n\n# ll RT ~ SSRT, with unusual SSRT subject left out\nrobreg2_stop.llrt=rlm(ll_RT~SSRT,data=Reg.data[Reg.data['SSRT']<500,])\nreg2.sum=summary(robreg2_stop.llrt)\nrl2.dd=data.frame(reg2.sum$coefficients)\nrl2.dd$pval=2*pt(abs(rl2.dd$t.value),reg2.sum$df[2],lower.tail=F)\n# round(rl2.dd,digits=3) # p=0.009, t(40)=2.75\n\n# ww RT ~ SSRT\nrobreg_stop.wwrt=rlm(ww_RT~SSRT,data=Reg.data)\nreg.sumww=summary(robreg_stop.wwrt)\nrl.ddww=data.frame(reg.sumww$coefficients)\nrl.ddww$pval=2*pt(abs(rl.ddww$t.value),reg.sumww$df[2],lower.tail=F)\n# round(rl.ddww,digits=3) # p=0.13, t(41)=1.57\n# also here leaving out SSRT>500 does not matter!\n\n# beta ~ SSRT\nrobreg_stop.beta=rlm(Beta~SSRT,data=Reg.data)\nreg.sumbeta=summary(robreg_stop.beta)\nrl.ddbeta=data.frame(reg.sumbeta$coefficients)\nrl.ddbeta$pval=2*pt(abs(rl.ddbeta$t.value),reg.sumbeta$df[2],lower.tail=F)\n# round(rl.ddbeta,digits=3) # p=0.08, t(41)=1.82\n# also here leaving out SSRT>500 does not matter!\n\nMulti.reg1=rlm(ll_RT~Beta+SSRT,data=Reg.data)\nreg.summulti=summary(Multi.reg1)\nrl.multi=data.frame(reg.summulti$coefficients)\nrl.multi$pval=2*pt(abs(rl.multi$t.value),reg.summulti$df[2],lower.tail=F)\n# round(rl.multi,digits=3) # t(40)\n\n# ssrt and lose-lose accuracy\nrobreg_stop.ll_ac=rlm(ll_ac~SSRT,data=Reg.data)\nreg.sumllac=summary(robreg_stop.ll_ac)\nrl.ddllac=data.frame(reg.sumllac$coefficients)\nrl.ddllac$pval=2*pt(abs(rl.ddllac$t.value),reg.sumllac$df[2],lower.tail=F)\n# round(rl.ddllac,digits=3) # p=0.34, t(41)=-0.97\n\n#--------------       3. The efficacy of control in the STN during full stops and slowing    --------------#\n\n# please see FIR analysis preformed by Tomas knapen\n\n#--------------       4. Conflict-induced slowing in cortico-basal ganglia pathways    --------------#\n\n\n# is there an effect of condition or conflict for top-down connections?\n\n# Prepare test file\nbSTN.av=as.data.frame(as.table(Connectivity$b.Topstn[,c(1,2,3)]))\ncolnames(bSTN.av)=c('ppn','cond','beta')\nbStr.av=as.data.frame(as.table(Connectivity$b.Topstr[,1:3]))\ncolnames(bStr.av)=c('ppn','cond','beta')\nSTN=data.frame(bSTN.av,connection='STN')\nSTR=data.frame(bStr.av,connection='STR')\nTOP=as.data.frame(rbind(STN,STR))\n\n\n# do anova \nTOP.av=ezANOVA(data=TOP,dv=.(beta),within=.(cond,connection),wid=.(ppn))\nprint(TOP.av) # only  main effect for connection, connectivity towards STR is stronger\n\n\n\n\n# how is top-down related to LL-behavior?\ncor.test(Connectivity$b.Topstn[,'ll'], RLwl.med[,'ll']) # yes, to LL RT\ncor.test(Connectivity$b.Topstn[,'ll'], RLwl.med[,'ll'])$p.value -> p.llRT\n# does top-STN connectviity on LL relate to explore/exploit?\ncor.test(Connectivity$b.Topstn[,'ll'], RL.model$learn[,'Beta']) # Yes!!\ncor.test(Connectivity$b.Topstn[,'ll'], RL.model$learn[,'Beta'])$p.value -> p.betaQ\n# SSRT and hyperdirect\ncor.test(Connectivity$b.Topstn[-which(rownames(Connectivity$b.Topstn)%in%Ex.stop),'ll'], STOP[,'SSRT']) \ncor.test(Connectivity$b.Topstn[-which(rownames(Connectivity$b.Topstn)%in%Ex.stop),'ll'], STOP[,'SSRT'])$p.value -> p.SSRT \n\n# adjust p-values for the 3 tests run on LL PFC-into-STN connectivity\np.adjust(p=c(p.llRT,p.betaQ, p.SSRT),method='bonferroni')\n\n\n# not observed for ww\ncor.test(Connectivity$b.Topstn[,'ww'], RLwl.med[,'ww']) # no\n\n# or for top-striatum\ncor.test(Connectivity$b.Topstr[,'ll'], RLwl.med[,'ll']) # no\ncor.test(Connectivity$b.Topstr[,'ll'], RL.model$learn[,'Beta']) #no\n\n\n# same observation with robust regression\n# Reg.data1=data.frame(ll_RT=RLwl.med[,'ll'],\n#                      llPFC_STN=Connectivity$b.Topstn[,'ll'],\n#                      llPFC_STR=Connectivity$b.Topstr[,'ll'],\n#                      Beta=RL.model$learn[,'Beta'])\n# \n# # robust regression\n# # ll RT ~ pfc-stn\n# robreg_stn.llrt=rlm(ll_RT~llPFC_STN,data=Reg.data1)\n# reg.sum.stn=summary(robreg_stn.llrt)\n# rl.dd.stn=data.frame(reg.sum.stn$coefficients)\n# rl.dd.stn$pval=2*pt(abs(rl.dd.stn$t.value),reg.sum.stn$df[2],lower.tail=F)\n# \n# # Beta ~ pfc-stn\n# robreg_stn.beta=rlm(Beta~llPFC_STN,data=Reg.data1)\n# reg.sum.stnb=summary(robreg_stn.beta)\n# rl.dd.stnb=data.frame(reg.sum.stnb$coefficients)\n# rl.dd.stnb$pval=2*pt(abs(rl.dd.stnb$t.value),reg.sum.stnb$df[2],lower.tail=F)\n\n\n# # this part is left out in revision\n# # now do a regression to evaluate explore/exploit, at the same time as RT.\n# Reg.data1=data.frame(ll_RT=RLwl.med[,'ll'], \n#                      llPFC_STN=Connectivity$b.Topstn[,'ll'],\n#                      llPFC_STR=Connectivity$b.Topstr[,'ll'],\n#                      Beta=RL.model$learn[,'Beta'])\n# \n# Multi.reg2=rlm(llPFC_STN ~Beta+ ll_RT,data=Reg.data1)\n# summary(Multi.reg2)\n\n# SSRT and hyperdirect\ncor.test(Connectivity$b.Topstn[-which(rownames(Connectivity$b.Topstn)%in%Ex.stop),'ll'], STOP[,'SSRT']) \n\n# en of results section!!!!\n\n\n\n\n\n\n\n",
    "created" : 1506520644150.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "927346447",
    "id" : "83AE2BFE",
    "lastKnownWriteTime" : 1514992017,
    "last_content_update" : 1514992017415,
    "path" : "~/Github/Control_Conflict/Code/Results_ControlConflict.R",
    "project_path" : "Code/Results_ControlConflict.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "relative_order" : 2,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}