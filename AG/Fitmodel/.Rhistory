rm(list=ls())
# load library
#setwd("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw")
#load("yDat_Test_fandnof.Rdat") # f-test, and bg no-ftest combined
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw/yDat_Test_nof.Rdat") # no-ftest
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw/yDat_Stop_fandnof.Rdat") # no-ftest
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/stop/_raw/yDat_Stop_nof.Rdat") # no-ftest
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/Stop/_raw/yDat_Stop_nof.Rdat") # no-ftest
read.table('~/Dropbox/Scripts/CiRaS/sctoBIDS/OldandNewSubjID.txt',h=T)->rename
yDat=yDat.RLTest.noF[which(names(yDat.RLTest.noF)%in%rename[rename['Incl_ex']!='all','subject_id'])]
yDat.ST=yDat.stopnf[which(names(yDat.stopnf)%in%rename[rename['Incl_ex']!='ok','subject_id'])]
rename
yDat.ST=yDat.stopnf[which(names(yDat.stopnf)%in%rename[rename['Incl_ex']=='ok','subject_id'])]
rename[rename[,'subject_id']%in%names(yDat),c('subject_id','BIDS_names')]->oldtonew
rename[rename[,'subject_id']%in%names(yDat.ST),c('subject_id','BIDS_names')]->oldtonew.ST
rename[rename[,'subject_id']%in%names(yDat),c('subject_id','BIDS_names')]->oldtonew
rename[rename[,'subject_id']%in%names(yDat.ST),c('subject_id','BIDS_names')]->oldtonew.ST
names(yDat)==oldtonew[,1]
names(yDat)=oldtonew[,2]
names(yDat.ST)==oldtonew.ST[,1]
names(yDat.ST)=oldtonew.ST[,2]
yDat.ST
rm(list=ls())
# load library
#setwd("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw")
#load("yDat_Test_fandnof.Rdat") # f-test, and bg no-ftest combined
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw/yDat_Test_nof.Rdat") # no-ftest
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/Stop/_raw/yDat_Stop_nof.Rdat") # no-ftest
# get BIDS names
read.table('~/Dropbox/Scripts/CiRaS/sctoBIDS/OldandNewSubjID.txt',h=T)->rename
# only save subeject for example who are included in Ciras study
yDat=yDat.RLTest.noF[which(names(yDat.RLTest.noF)%in%rename[rename['Incl_ex']!='all','subject_id'])]
yDat.ST=yDat.stopnf[which(names(yDat.stopnf)%in%rename[rename['Incl_ex']=='ok','subject_id'])]
rename[rename[,'subject_id']%in%names(yDat),c('subject_id','BIDS_names')]->oldtonew
rename[rename[,'subject_id']%in%names(yDat.ST),c('subject_id','BIDS_names')]->oldtonew.ST
names(yDat)==oldtonew[,1]
names(yDat.ST)==oldtonew.ST[,1]
ST.nodes=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
DM.nodes=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4","type")
c(ST.nodes,DM.nodes)
nodes=c(ST.nodes,DM.nodes)
yDat.RL=list()
yDat.STS=list()
ST.nodes=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
DM.nodes=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4","type")
nodes=c(ST.nodes,DM.nodes)
yDat.RL=list()
yDat.STS=list()
num=0
for (d in yDat)
{
num=num+1
tmp=d[,which(colnames(d)%in%nodes)]
rownames(tmp)=substr(rownames(tmp),8,100)
tmp$type=substr(tmp$type,8,100)
yDat.RL[[num]]=tmp
}
names(yDat.RL)=names(yDat)
head(yDat.RL[[1]])
num=0
for (s in yDat.ST)
{
num=num+1
tmp=s[,which(colnames(s)%in%nodes)]
rownames(tmp)=substr(rownames(tmp),8,100)
tmp$type=substr(tmp$type,8,100)
yDat.STS[[num]]=tmp
}
names(yDat.STS)=names(yDat.ST)
head(yDat.STS[[1]])
rm(list=ls())
# load library
#setwd("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw")
#load("yDat_Test_fandnof.Rdat") # f-test, and bg no-ftest combined
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/RL/test/_raw/yDat_Test_nof.Rdat") # no-ftest
load("~/Dropbox/Projects/Ciras/MRI_study/Graphs/Stop/_raw/yDat_Stop_nof.Rdat") # no-ftest
# get BIDS names
read.table('~/Dropbox/Scripts/CiRaS/sctoBIDS/OldandNewSubjID.txt',h=T)->rename
# only save subeject for example who are included in Ciras study
yDat=yDat.RLTest.noF[which(names(yDat.RLTest.noF)%in%rename[rename['Incl_ex']!='all','subject_id'])]
yDat.ST=yDat.stopnf[which(names(yDat.stopnf)%in%rename[rename['Incl_ex']=='ok','subject_id'])]
rename[rename[,'subject_id']%in%names(yDat),c('subject_id','BIDS_names')]->oldtonew
rename[rename[,'subject_id']%in%names(yDat.ST),c('subject_id','BIDS_names')]->oldtonew.ST
names(yDat)==oldtonew[,1]
names(yDat)=oldtonew[,2]
names(yDat.ST)==oldtonew.ST[,1]
names(yDat.ST)=oldtonew.ST[,2]
ST.nodes=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
DM.nodes=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4","type")
nodes=c(ST.nodes,DM.nodes)
yDat.RL=list()
yDat.STS=list()
num=0
for (d in yDat)
{
num=num+1
tmp=d[,which(colnames(d)%in%nodes)]
rownames(tmp)=substr(rownames(tmp),8,100)
tmp$type=substr(tmp$type,8,100)
yDat.RL[[num]]=tmp
}
names(yDat.RL)=names(yDat)
num=0
for (s in yDat.ST)
{
num=num+1
tmp=s[,which(colnames(s)%in%nodes)]
rownames(tmp)=substr(rownames(tmp),8,100)
tmp$type=substr(tmp$type,8,100)
yDat.STS[[num]]=tmp
}
names(yDat.STS)=names(yDat.ST)
getwd()
getwd()
save(yDat.STS, file='/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/Fit_data/singletrial_fMRIinputAG_stoptask.Rdat')
save(yDat.RL, file='/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/Fit_data/singletrial_fMRIinputAG_RLtest.Rdat')
sessionInfo()
rm(list=ls())
load(paste(dir_data,"/singletrial_fMRIinputAG_RLtest.Rdat",sep='')) # no-ftest
rm(list=ls())
# set datadir Base
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
dir_output=paste(dir_base,'/Fit_output',sep='')
# source checked packages
source("http://bioconductor.org/biocLite.R")
biocLite("graph")
biocLite("RBGL")
biocLite("igraph")
biocLite("MASS")
# just to check
library(MASS)
library(RBGL)
library(graph)
install.packages(paste(dir_agcodes,'/Rpackage_checked/ggm-1.995-3.tar.gz',sep=''), repos = NULL, type="source")
sessionInfo()
# source AG_codes
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
sessionInfo()
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
load(paste(dir_data,"/singletrial_fMRIinputAG_RLtest.Rdat",sep='')) # no-ftest
yDat=yDat.RL
source(paste(dir_excodes,'/index_yDatRLtest.R',sep=''), chdir = F)
cond1 = list(ewwL,ewwR,ellL,ellR,eBwlL,eBwlR,eMwlL,eMwlR,eSwlL,eSwlR) # correct and incorrect trials, wl = only new pairs (not used in learning)
names(cond1)=c('ewwL','ewwR','ellL','ellR','BwlL','BwlR','MwlL','MwlR','SwlL','SwlR')
# these are the conditions that are evalauted seperatly in Fitmodels_draft.R
cond2 = list(eww,ell,eBwl,eMwl,eSwl) # correct and
names(cond2)=c('eww','ell','eBwl','eMwl','eSwl')
# select regions that go into graph
MGO=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4")
# select the graph nodes for connectivity network
M0roi=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
C.Lab=M0roi
#C.Lab = MGO
cond=cond2
source(paste(dir_excodes,'/StopModel.R',sep=''), chdir = F)
source(paste(dir_excodes,'/Fitmodels_draft.R',sep=''), chdir = F)
AMT
cond=cond1
source(paste(dir_excodes,'/StopModel.R',sep=''), chdir = F)
# Now do the connectivity evaluation for each subject, each model/condition, to compute aic/bic and n-fits
source(paste(dir_excodes,'/Fitmodels_draft.R',sep=''), chdir = F)
BMT
dir_data
rm(list=ls())
# set datadir Base
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
dir_output=paste(dir_base,'/Fit_output',sep='')
# source checked packages
source("http://bioconductor.org/biocLite.R")
biocLite("graph")
biocLite("RBGL")
biocLite("igraph")
biocLite("MASS")
# just to check
library(MASS)
library(RBGL)
library(graph)
install.packages(paste(dir_agcodes,'/Rpackage_checked/ggm-1.995-3.tar.gz',sep=''), repos = NULL, type="source")
sessionInfo()
# source AG_codes
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
dir_excodes
source(paste(dir_excodes,'/index_yDatstop.R',sep=''), chdir = F)
# these are the conditions that are evalauted seperatly in FitmodelsStop.R
cond=list(ST,SR,Go,GoL,GoR)
names(cond)=c('ST', 'SR', 'Go','GoL','GoR')
# select the graph nodes for connectivity network
M0roi=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
C.Lab=M0roi
source(paste(dir_excodes,'/StopModel.R',sep=''), chdir = F)
# Now do the connectivity evaluation for each subject, each model/condition, to compute aic/bic and n-fits
source(paste(dir_excodes,'/FitmodelsStop.R',sep=''), chdir = F)
source(paste(dir_excodes,'/StopModel.R',sep=''), chdir = F)
source(paste(dir_excodes,'/Fitmodels_draft.R',sep=''), chdir = F)
BMT
dir_base
save(BMT,file='/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/_other/BICFIT_Stoptask.Rdat')
rm(list=ls())
# set datadir Base
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
dir_output=paste(dir_base,'/Fit_output',sep='')
library(MASS)
library(RBGL)
library(graph)
install.packages(paste(dir_agcodes,'/Rpackage_checked/ggm-1.995-3.tar.gz',sep=''), repos = NULL, type="source")
sessionInfo()
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
# Read yDat list with single subject beta's for each trial/roi, and make index list for the conditions of interest
source(paste(dir_excodes,'/index_yDatRLtest.R',sep=''), chdir = F)
# these are the conditions that are evalauted seperatly in Fitmodels_draft.R
cond2 = list(ewwL,ewwR,eww,ellL,ellR,ell) # correct and incorrect trials, wl = only new pairs (not used in learning)
names(cond2)=c('ewwL','ewwR','eww','ellL','ellR','ell')
# select the graph nodes for connectivity network
M0roi=c("CaudateR40exc" ,"PreSMARsmall","IFGR",
"maxSTNR25exc","maxGPeR30exc","maxGPiR30exc",
"ThalamusR40exc")
C.Lab=M0roi
cond=cond1
cond=cond2
source(paste(dir_excodes,'/StopModel.R',sep=''), chdir = F)
source(paste(dir_excodes,'/Fitmodels_draft.R',sep=''), chdir = F)
BMT
save(BMT,file='/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/_other/BICFIT_RLtestStopNetwork.Rdat')
208/34
76/9
9*4
getwd()
load("/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/_other/BICFIT_RLtestStopNetwork.Rdat")
load("/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/_other/BICFIT_RLtestStopNetwork.Rdat")
RL_stopfit=BMT;rm(BMT)
load("/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/_other/BICFIT_Stoptask.Rdat")
ST_stopfit=BMT; rm(BMT)
RL_stopfit
ST_stopfit
RL_stopfit[,'chi1']/45
RL.st.p=RL_stopfit[,'chi1']/45
ST.st.p=ST_stopfit[,'chi1']/43
ST.st.p
RL.st.p=(RL_stopfit[,'chi1']/45)*100
RL.st.p
ST.st.p=(ST_stopfit[,'chi1']/43)*100
ST.st.p
data.frame(ST=ST.st.p[1],SR=ST.st.p[2],Go=c(ST.st.p[4:5]),WW=c(RL_stopfit[1:2]),LL=c(RL_stopfit[4:5]))
all=data.frame(ST=ST.st.p[1],SR=ST.st.p[2],Go=c(ST.st.p[4:5]),WW=c(RL.st.p[1:2]),LL=c(RL.st.p[4:5]))
all=data.frame(ST=ST.st.p[1],SR=ST.st.p[2],Go=c(ST.st.p[4:5]),WW=c(RL.st.p[1:2]),LL=c(RL.st.p[4:5]))
barplot(all,beside=T,ylab=c(0,100))
all
barplot(all,beside=T,ylim=c(0,100))
?barplot
str(all)
barplot(as.matrix(all),beside=T,ylim=c(0,100))
barplot(as.matrix(all),beside=T,ylim=c(0,100), las=1)
par(cex= 1, cex.main=1.6,mar = c(1, 5.5, 1, 1), mgp = c(3.8, 1, 0),
cex.lab = 1.5, cex.axis = 1.2, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=2, family='Arial',bg='white')
barplot(as.matrix(all),beside=T,ylim=c(0,100), las=1)
par(cex= 1, cex.main=1.6,mar = c(1, 2, 2, 1), mgp = c(3.8, 1, 0),
cex.lab = 1.5, cex.axis = 1.2, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=2, family='Arial',bg='white')
barplot(as.matrix(all),beside=T,ylim=c(0,100), las=1)
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.6, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all),beside=T,ylim=c(0,100), las=1)
barplot(as.matrix(all[,c('GO','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1)
as.matrix(all[,c('GO','WW','LL','ST','SR')])
all[,c('GO','WW','LL','ST','SR')]
all[c('GO','WW','LL','ST','SR')])
all[c('GO','WW','LL','ST','SR')]
all
all[,c('GO','WW','LL','ST','SR')]
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1)
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('green','darkgreen','blue','darkblue',
'blue','darkblue','red','red','orange','orange'))
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(0,50))
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(10,50))
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(10,100))
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.6, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(10,100),ylab='% subjects where Stop Model fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(10,100),ylab='% fit to subjects')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(10,100),ylab='% subjects stop model fits')
all
RL.st.p
rep(10,100,3)
rep(c(10,100),3)
c(rep(c(10,100),3),rep(100,4))
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% subjects stop model fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% subjects stop model fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% subjects fits')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of N fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=1,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=3,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=2)
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=3)
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=1)
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=2)
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=1)
legend('topleft',c('Left','Right'),density=c(10,100),bty='')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=1)
legend('topleft',c('Left','Right'),density=c(10,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(10,100),3),rep(100,4)),ylab='% of fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(10,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% of fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
plot.new()
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
dev.off()
plot.new()
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
plot.new()
dev.new()
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('Go','WW','LL','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('darkgreen','darkgreen','blue','blue',
'blue','blue','red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('WW','LL','Go','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('blue','blue',
'blue','blue',
'darkgreen','darkgreen',
'red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% Model Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
par(cex= 1, cex.main=2,mar = c(4, 6, 3, 2), mgp = c(3.9, 1, 0),
cex.lab = 1.3, cex.axis = 1.3, bty = "n", las=2,
font.axis=2,font.lab=2,font=2,lwd=3, family='Arial',bg='white')
barplot(as.matrix(all[,c('WW','LL','Go','ST','SR')]),beside=T
,ylim=c(0,110), las=1,col=c('blue','blue',
'blue','blue',
'darkgreen','darkgreen',
'red','red','orange','orange'),
density=c(rep(c(20,100),3),rep(100,4)),ylab='% N Fits',las=1)
legend('topleft',c('Left hand','Right hand'),density=c(20,100),bty='n')
4.6+4.6+4.3
