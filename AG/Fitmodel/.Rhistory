covList.EllL =lapply(EllL,cov)
covList.EllR =lapply(EllR,cov)
covList.EBwlL =lapply(EBwlL,cov)
covList.EBwlR =lapply(EBwlR,cov)
covList.EMwlL =lapply(EMwlL,cov)
covList.EMwlR =lapply(EMwlR,cov)
covList.ESwlL =lapply(ESwlL,cov)
covList.ESwlR =lapply(ESwlR,cov)
fitEwwL=list()
fitEwwR=list()
fitEllL=list()
fitEllR=list()
fitEBwlL=list()
fitEBwlR=list()
fitEMwlL=list()
fitEMwlR=list()
fitESwlL=list()
fitESwlR=list()
for (i in 1:length(yDat))
{
fitEwwL[[i]]=fitAncestralGraph(Model, covList.EwwL[[i]],dim(EwwL[[i]])[1])
fitEwwR[[i]]=fitAncestralGraph(Model, covList.EwwR[[i]],dim(EwwR[[i]])[1])
fitEllL[[i]]=fitAncestralGraph(Model, covList.EllL[[i]],dim(EllL[[i]])[1])
fitEllR[[i]]=fitAncestralGraph(Model, covList.EllR[[i]],dim(EllR[[i]])[1])
fitEBwlL[[i]]=fitAncestralGraph(Model, covList.EBwlL[[i]],dim(EBwlL[[i]])[1])
fitEBwlR[[i]]=fitAncestralGraph(Model, covList.EBwlR[[i]],dim(EBwlR[[i]])[1])
fitEMwlL[[i]]=fitAncestralGraph(Model,covList.EMwlL[[i]],dim(EMwlL[[i]])[1])
fitEMwlR[[i]]=fitAncestralGraph(Model,covList.EMwlR[[i]],dim(EMwlR[[i]])[1])
fitESwlL[[i]]=fitAncestralGraph(Model,covList.ESwlL[[i]],dim(ESwlL[[i]])[1])
fitESwlR[[i]]=fitAncestralGraph(Model,covList.ESwlR[[i]],dim(ESwlR[[i]])[1])
}
Model=makeMG(dg=DAG(
PstriatumNoVentri~ preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
maxSTN25exc~preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
GPe30exc~PstriatumNoVentri,
maxGPi30exc~PstriatumNoVentri+GPe30exc+maxSTN25exc,
Thalamus40exc~maxGPi30exc,
MotorCBA4aL~ Thalamus40exc
),ug=UG(~preSMAsmall*PvmPFCNoventri*DLPFCposterior))
for (i in 1:length(yDat))
{
fitEwwL[[i]]=fitAncestralGraph(Model, covList.EwwL[[i]],dim(EwwL[[i]])[1])
fitEwwR[[i]]=fitAncestralGraph(Model, covList.EwwR[[i]],dim(EwwR[[i]])[1])
fitEllL[[i]]=fitAncestralGraph(Model, covList.EllL[[i]],dim(EllL[[i]])[1])
fitEllR[[i]]=fitAncestralGraph(Model, covList.EllR[[i]],dim(EllR[[i]])[1])
fitEBwlL[[i]]=fitAncestralGraph(Model, covList.EBwlL[[i]],dim(EBwlL[[i]])[1])
fitEBwlR[[i]]=fitAncestralGraph(Model, covList.EBwlR[[i]],dim(EBwlR[[i]])[1])
fitEMwlL[[i]]=fitAncestralGraph(Model,covList.EMwlL[[i]],dim(EMwlL[[i]])[1])
fitEMwlR[[i]]=fitAncestralGraph(Model,covList.EMwlR[[i]],dim(EMwlR[[i]])[1])
fitESwlL[[i]]=fitAncestralGraph(Model,covList.ESwlL[[i]],dim(ESwlL[[i]])[1])
fitESwlR[[i]]=fitAncestralGraph(Model,covList.ESwlR[[i]],dim(ESwlR[[i]])[1])
}
var.g.EwwL <-ag.var.group(fitEwwL, covList.EwwL, EwwL)
var.g.EwwR <-ag.var.group(fitEwwR, covList.EwwR, EwwR)
var.g.EllL <-ag.var.group(fitEllL, covList.EllL, EllL)
var.g.EllR <-ag.var.group(fitEllR, covList.EllR, EllR)
var.g.EBwlL <-ag.var.group(fitEBwlL, covList.EBwlL, EBwlL)
var.g.EBwlR <-ag.var.group(fitEBwlR, covList.EBwlR, EBwlR)
var.g.EMwlL <-ag.var.group(fitEMwlL, covList.EMwlL, EMwlL)
var.g.EMwlR <-ag.var.group(fitEMwlR, covList.EMwlR, EMwlR)
var.g.ESwlL <-ag.var.group(fitESwlL, covList.ESwlL, ESwlL)
var.g.ESwlR <-ag.var.group(fitESwlR, covList.ESwlR, ESwlR)
# beta
beta.EwwL = matrix(,dim(var.g.EwwL)[3],dim(var.g.EwwL)[1])
beta.EwwR = matrix(,dim(var.g.EwwR)[3],dim(var.g.EwwR)[1])
beta.EllL = matrix(,dim(var.g.EllL)[3],dim(var.g.EllL)[1])
beta.EllR = matrix(,dim(var.g.EllR)[3],dim(var.g.EllR)[1])
beta.EBwlL = matrix(,dim(var.g.EBwlL)[3],dim(var.g.EBwlL)[1])
beta.EBwlR = matrix(,dim(var.g.EBwlR)[3],dim(var.g.EBwlR)[1])
beta.EMwlL = matrix(,dim(var.g.EMwlL)[3],dim(var.g.EMwlL)[1])
beta.EMwlR = matrix(,dim(var.g.EMwlR)[3],dim(var.g.EMwlR)[1])
beta.ESwlL = matrix(,dim(var.g.ESwlL)[3],dim(var.g.ESwlL)[1])
beta.ESwlR = matrix(,dim(var.g.ESwlR)[3],dim(var.g.ESwlR)[1])
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwL
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwR = matrix(,length(yDat),length(ag.theta(fitEwwR[[1]])))
beta.EllL = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EllR = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
# beta
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwR = matrix(,length(yDat),length(ag.theta(fitEwwR[[1]])))
beta.EllL = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EllR = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EBwlL = matrix(,length(yDat),length(ag.theta(fitEBwlL[[1]])))
beta.EBwlR = matrix(,length(yDat),length(ag.theta(fitEBwlR[[1]])))
beta.EMwlL = matrix(,length(yDat),length(ag.theta(fitEMwlL[[1]])))
beta.EMwlR = matrix(,length(yDat),length(ag.theta(fitEMwlR[[1]])))
beta.ESwlL = matrix(,length(yDat),length(ag.theta(fitESwlL[[1]])))
beta.ESwlR = matrix(,length(yDat),length(ag.theta(fitESwlR[[1]])))
for (i in 1:length(yDat))
{
beta.EwwL[i,] = ag.theta(fitEwwL[[i]])
beta.EwwR[i,] = ag.theta(fitEwwR[[i]])
beta.EllL[i,] = ag.theta(fitEllL[[i]])
beta.EllR[i,] = ag.theta(fitEllR[[i]])
beta.EBwlL[i,] = ag.theta(fitEBwlL[[i]])
beta.EBwlR[i,] = ag.theta(fitEBwlR[[i]])
beta.EMwlL[i,] = ag.theta(fitEMwlL[[i]])
beta.EMwlR[i,] = ag.theta(fitEMwlR[[i]])
beta.ESwlL[i,] = ag.theta(fitESwlL[[i]])
beta.ESwlR[i,] = ag.theta(fitESwlR[[i]])
}
beta.EwwL
fitESwlR
beta.ESwlR[45,]
ag.theta(fitEwwL[[i]])
length(ag.theta(fitEwwL[[1]]))
length(ag.theta(fitEwwL[[1]]))
length(ag.theta(fitEwwL[[1]]))
i
ag.theta(fitESwlR[[i]])
beta.ESwlR[45,]
fitESwlR
beta.ESwlR[45,]
ag.theta(fitESwlR[[i]])
ag.theta(fitESwlR[[i]])
fitESwlR
fitEwwL[[1]]
ag.theta(fitEwwL[[1]]))
ag.theta(fitEwwL[[1]])
ag.theta
Model
sessionInfo()
Model=makeMG(dg=DAG(
PstriatumNoVentri~ preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
maxSTN25exc~preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
GPe30exc~PstriatumNoVentri,
maxGPi30exc~PstriatumNoVentri+GPe30exc+maxSTN25exc,
Thalamus40exc~maxGPi30exc,
MotorCBA4aL~ Thalamus40exc
),ug=UG(~preSMAsmall*PvmPFCNoventri*DLPFCposterior))
EwwL=list()
EwwR=list()
EllL=list()
EllR=list()
EBwlL=list()
EBwlR=list()
EMwlL=list()
EMwlR=list()
ESwlL=list()
ESwlR=list()
for (i in 1:length(yDat))
{
EwwL[[i]]=yDat[[i]][cond[[1]][[i]],C.Lab]
EwwR[[i]]=yDat[[i]][cond[[2]][[i]],C.Lab]
EllL[[i]]=yDat[[i]][cond[[3]][[i]],C.Lab]
EllR[[i]]=yDat[[i]][cond[[4]][[i]],C.Lab]
EBwlL[[i]]=yDat[[i]][cond[[5]][[i]],C.Lab]
EBwlR[[i]]=yDat[[i]][cond[[6]][[i]],C.Lab]
EMwlL[[i]]=yDat[[i]][cond[[7]][[i]],C.Lab]
EMwlR[[i]]=yDat[[i]][cond[[8]][[i]],C.Lab]
ESwlL[[i]]=yDat[[i]][cond[[9]][[i]],C.Lab]
ESwlR[[i]]=yDat[[i]][cond[[10]][[i]],C.Lab]
}
# compute covariance matrix
covList.EwwL =lapply(EwwL,cov)
covList.EwwR =lapply(EwwR,cov)
covList.EllL =lapply(EllL,cov)
covList.EllR =lapply(EllR,cov)
covList.EBwlL =lapply(EBwlL,cov)
covList.EBwlR =lapply(EBwlR,cov)
covList.EMwlL =lapply(EMwlL,cov)
covList.EMwlR =lapply(EMwlR,cov)
covList.ESwlL =lapply(ESwlL,cov)
covList.ESwlR =lapply(ESwlR,cov)
fitEwwL=list()
fitEwwR=list()
fitEllL=list()
fitEllR=list()
fitEBwlL=list()
fitEBwlR=list()
fitEMwlL=list()
fitEMwlR=list()
fitESwlL=list()
fitESwlR=list()
for (i in 1:length(yDat))
{
fitEwwL[[i]]=fitAncestralGraph(Model, covList.EwwL[[i]],dim(EwwL[[i]])[1])
fitEwwR[[i]]=fitAncestralGraph(Model, covList.EwwR[[i]],dim(EwwR[[i]])[1])
fitEllL[[i]]=fitAncestralGraph(Model, covList.EllL[[i]],dim(EllL[[i]])[1])
fitEllR[[i]]=fitAncestralGraph(Model, covList.EllR[[i]],dim(EllR[[i]])[1])
fitEBwlL[[i]]=fitAncestralGraph(Model, covList.EBwlL[[i]],dim(EBwlL[[i]])[1])
fitEBwlR[[i]]=fitAncestralGraph(Model, covList.EBwlR[[i]],dim(EBwlR[[i]])[1])
fitEMwlL[[i]]=fitAncestralGraph(Model,covList.EMwlL[[i]],dim(EMwlL[[i]])[1])
fitEMwlR[[i]]=fitAncestralGraph(Model,covList.EMwlR[[i]],dim(EMwlR[[i]])[1])
fitESwlL[[i]]=fitAncestralGraph(Model,covList.ESwlL[[i]],dim(ESwlL[[i]])[1])
fitESwlR[[i]]=fitAncestralGraph(Model,covList.ESwlR[[i]],dim(ESwlR[[i]])[1])
}
# beta
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwR = matrix(,length(yDat),length(ag.theta(fitEwwR[[1]])))
beta.EllL = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EllR = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EBwlL = matrix(,length(yDat),length(ag.theta(fitEBwlL[[1]])))
beta.EBwlR = matrix(,length(yDat),length(ag.theta(fitEBwlR[[1]])))
beta.EMwlL = matrix(,length(yDat),length(ag.theta(fitEMwlL[[1]])))
beta.EMwlR = matrix(,length(yDat),length(ag.theta(fitEMwlR[[1]])))
beta.ESwlL = matrix(,length(yDat),length(ag.theta(fitESwlL[[1]])))
beta.ESwlR = matrix(,length(yDat),length(ag.theta(fitESwlR[[1]])))
for (i in 1:length(yDat))
{
beta.EwwL[i,] = ag.theta(fitEwwL[[i]])
beta.EwwR[i,] = ag.theta(fitEwwR[[i]])
beta.EllL[i,] = ag.theta(fitEllL[[i]])
beta.EllR[i,] = ag.theta(fitEllR[[i]])
beta.EBwlL[i,] = ag.theta(fitEBwlL[[i]])
beta.EBwlR[i,] = ag.theta(fitEBwlR[[i]])
beta.EMwlL[i,] = ag.theta(fitEMwlL[[i]])
beta.EMwlR[i,] = ag.theta(fitEMwlR[[i]])
beta.ESwlL[i,] = ag.theta(fitESwlL[[i]])
beta.ESwlR[i,] = ag.theta(fitESwlR[[i]])
}
beta.ESwlR
beta.ESwlR[45,]
fitAncestralGraph
Model
fitESwlR
fitAncestralGraph
icfmag
rm(list=ls())
# set datadir Base
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
library(MASS)
library(RBGL)
library(graph)
library(ggm)
sessionInfo()
# source AG_codes
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
# Read yDat list with single subject beta's for each trial/roi, and make index list for the conditions of interest
source(paste(dir_excodes,'/index_yDatRLtest.R',sep=''), chdir = F)
cond1 = list(ewwL,ewwR,ellL,ellR,eBwlL,eBwlR,eMwlL,eMwlR,eSwlL,eSwlR) # correct and incorrect trials, wl = only new pairs (not used in learning)
names(cond1)=c('ewwL','ewwR','ellL','ellR','BwlL','BwlR','MwlL','MwlR','SwlL','SwlR')
# select regions that go into graph
MGO=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4")
# This is with left motor corrtex
MGO2=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorCBA4aL")
C.Lab = MGO2
cond=cond1
Model=makeMG(dg=DAG(
PstriatumNoVentri~ preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
maxSTN25exc~preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
GPe30exc~PstriatumNoVentri,
maxGPi30exc~PstriatumNoVentri+GPe30exc+maxSTN25exc,
Thalamus40exc~maxGPi30exc,
MotorCBA4aL~ Thalamus40exc
),ug=UG(~preSMAsmall*PvmPFCNoventri*DLPFCposterior))
str(Model)
EwwL=list()
EwwR=list()
EllL=list()
EllR=list()
EBwlL=list()
EBwlR=list()
EMwlL=list()
EMwlR=list()
ESwlL=list()
ESwlR=list()
for (i in 1:length(yDat))
{
EwwL[[i]]=yDat[[i]][cond[[1]][[i]],C.Lab]
EwwR[[i]]=yDat[[i]][cond[[2]][[i]],C.Lab]
EllL[[i]]=yDat[[i]][cond[[3]][[i]],C.Lab]
EllR[[i]]=yDat[[i]][cond[[4]][[i]],C.Lab]
EBwlL[[i]]=yDat[[i]][cond[[5]][[i]],C.Lab]
EBwlR[[i]]=yDat[[i]][cond[[6]][[i]],C.Lab]
EMwlL[[i]]=yDat[[i]][cond[[7]][[i]],C.Lab]
EMwlR[[i]]=yDat[[i]][cond[[8]][[i]],C.Lab]
ESwlL[[i]]=yDat[[i]][cond[[9]][[i]],C.Lab]
ESwlR[[i]]=yDat[[i]][cond[[10]][[i]],C.Lab]
}
# compute covariance matrix
covList.EwwL =lapply(EwwL,cov)
covList.EwwR =lapply(EwwR,cov)
covList.EllL =lapply(EllL,cov)
covList.EllR =lapply(EllR,cov)
covList.EBwlL =lapply(EBwlL,cov)
covList.EBwlR =lapply(EBwlR,cov)
covList.EMwlL =lapply(EMwlL,cov)
covList.EMwlR =lapply(EMwlR,cov)
covList.ESwlL =lapply(ESwlL,cov)
covList.ESwlR =lapply(ESwlR,cov)
fitEwwL=list()
fitEwwR=list()
fitEllL=list()
fitEllR=list()
fitEBwlL=list()
fitEBwlR=list()
fitEMwlL=list()
fitEMwlR=list()
fitESwlL=list()
fitESwlR=list()
for (i in 1:length(yDat))
{
fitEwwL[[i]]=fitAncestralGraph(Model, covList.EwwL[[i]],dim(EwwL[[i]])[1])
fitEwwR[[i]]=fitAncestralGraph(Model, covList.EwwR[[i]],dim(EwwR[[i]])[1])
fitEllL[[i]]=fitAncestralGraph(Model, covList.EllL[[i]],dim(EllL[[i]])[1])
fitEllR[[i]]=fitAncestralGraph(Model, covList.EllR[[i]],dim(EllR[[i]])[1])
fitEBwlL[[i]]=fitAncestralGraph(Model, covList.EBwlL[[i]],dim(EBwlL[[i]])[1])
fitEBwlR[[i]]=fitAncestralGraph(Model, covList.EBwlR[[i]],dim(EBwlR[[i]])[1])
fitEMwlL[[i]]=fitAncestralGraph(Model,covList.EMwlL[[i]],dim(EMwlL[[i]])[1])
fitEMwlR[[i]]=fitAncestralGraph(Model,covList.EMwlR[[i]],dim(EMwlR[[i]])[1])
fitESwlL[[i]]=fitAncestralGraph(Model,covList.ESwlL[[i]],dim(ESwlL[[i]])[1])
fitESwlR[[i]]=fitAncestralGraph(Model,covList.ESwlR[[i]],dim(ESwlR[[i]])[1])
}
# beta
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwR = matrix(,length(yDat),length(ag.theta(fitEwwR[[1]])))
beta.EllL = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EllR = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EBwlL = matrix(,length(yDat),length(ag.theta(fitEBwlL[[1]])))
beta.EBwlR = matrix(,length(yDat),length(ag.theta(fitEBwlR[[1]])))
beta.EMwlL = matrix(,length(yDat),length(ag.theta(fitEMwlL[[1]])))
beta.EMwlR = matrix(,length(yDat),length(ag.theta(fitEMwlR[[1]])))
beta.ESwlL = matrix(,length(yDat),length(ag.theta(fitESwlL[[1]])))
beta.ESwlR = matrix(,length(yDat),length(ag.theta(fitESwlR[[1]])))
for (i in 1:length(yDat))
{
beta.EwwL[i,] = ag.theta(fitEwwL[[i]])
beta.EwwR[i,] = ag.theta(fitEwwR[[i]])
beta.EllL[i,] = ag.theta(fitEllL[[i]])
beta.EllR[i,] = ag.theta(fitEllR[[i]])
beta.EBwlL[i,] = ag.theta(fitEBwlL[[i]])
beta.EBwlR[i,] = ag.theta(fitEBwlR[[i]])
beta.EMwlL[i,] = ag.theta(fitEMwlL[[i]])
beta.EMwlR[i,] = ag.theta(fitEMwlR[[i]])
beta.ESwlL[i,] = ag.theta(fitESwlL[[i]])
beta.ESwlR[i,] = ag.theta(fitESwlR[[i]])
}
i
fitESwlR
ag.theta(fitESwlR[[i]])
fitAncestralGraph
rm(list=ls())
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
library(MASS)
library(RBGL)
library(graph)
library(ggm)
fitAncestralGraph()
?fitAncestralGraph
sessionInfo()
install.packages(paste(dir_agcodes,'/Rpackage_checked/ggm-1.995-3.tar.gz',sep=''), repos = NULL, type="source")
sessionInfo()
file.sources = list.files(paste(dir_agcodes,'/rFunctions2',sep=''),pattern="*.R",full.names = TRUE,recursive=T)
sapply(file.sources,source,.GlobalEnv)
# Read yDat list with single subject beta's for each trial/roi, and make index list for the conditions of interest
source(paste(dir_excodes,'/index_yDatRLtest.R',sep=''), chdir = F)
#########################################################################
# these are the conditions that are evalauted seperatly in Fitmodels_draft.R
cond1 = list(ewwL,ewwR,ellL,ellR,eBwlL,eBwlR,eMwlL,eMwlR,eSwlL,eSwlR) # correct and incorrect trials, wl = only new pairs (not used in learning)
names(cond1)=c('ewwL','ewwR','ellL','ellR','BwlL','BwlR','MwlL','MwlR','SwlL','SwlR')
# select regions that go into graph
MGO=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorBA4")
# This is with left motor corrtex
MGO2=c("PvmPFCNoventri" ,"preSMAsmall",
"maxSTN25exc","GPe30exc","maxGPi30exc", "DLPFCposterior" ,
"Thalamus40exc","PstriatumNoVentri","MotorCBA4aL")
C.Lab = MGO2
cond=cond1
Model=makeMG(dg=DAG(
PstriatumNoVentri~ preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
maxSTN25exc~preSMAsmall +PvmPFCNoventri+ DLPFCposterior,
GPe30exc~PstriatumNoVentri,
maxGPi30exc~PstriatumNoVentri+GPe30exc+maxSTN25exc,
Thalamus40exc~maxGPi30exc,
MotorCBA4aL~ Thalamus40exc
),ug=UG(~preSMAsmall*PvmPFCNoventri*DLPFCposterior))
EwwL=list()
EwwR=list()
EllL=list()
EllR=list()
EBwlL=list()
EBwlR=list()
EMwlL=list()
EMwlR=list()
ESwlL=list()
ESwlR=list()
for (i in 1:length(yDat))
{
EwwL[[i]]=yDat[[i]][cond[[1]][[i]],C.Lab]
EwwR[[i]]=yDat[[i]][cond[[2]][[i]],C.Lab]
EllL[[i]]=yDat[[i]][cond[[3]][[i]],C.Lab]
EllR[[i]]=yDat[[i]][cond[[4]][[i]],C.Lab]
EBwlL[[i]]=yDat[[i]][cond[[5]][[i]],C.Lab]
EBwlR[[i]]=yDat[[i]][cond[[6]][[i]],C.Lab]
EMwlL[[i]]=yDat[[i]][cond[[7]][[i]],C.Lab]
EMwlR[[i]]=yDat[[i]][cond[[8]][[i]],C.Lab]
ESwlL[[i]]=yDat[[i]][cond[[9]][[i]],C.Lab]
ESwlR[[i]]=yDat[[i]][cond[[10]][[i]],C.Lab]
}
# compute covariance matrix
covList.EwwL =lapply(EwwL,cov)
covList.EwwR =lapply(EwwR,cov)
covList.EllL =lapply(EllL,cov)
covList.EllR =lapply(EllR,cov)
covList.EBwlL =lapply(EBwlL,cov)
covList.EBwlR =lapply(EBwlR,cov)
covList.EMwlL =lapply(EMwlL,cov)
covList.EMwlR =lapply(EMwlR,cov)
covList.ESwlL =lapply(ESwlL,cov)
covList.ESwlR =lapply(ESwlR,cov)
fitEwwL=list()
fitEwwR=list()
fitEllL=list()
fitEllR=list()
fitEBwlL=list()
fitEBwlR=list()
fitEMwlL=list()
fitEMwlR=list()
fitESwlL=list()
fitESwlR=list()
for (i in 1:length(yDat))
{
fitEwwL[[i]]=fitAncestralGraph(Model, covList.EwwL[[i]],dim(EwwL[[i]])[1])
fitEwwR[[i]]=fitAncestralGraph(Model, covList.EwwR[[i]],dim(EwwR[[i]])[1])
fitEllL[[i]]=fitAncestralGraph(Model, covList.EllL[[i]],dim(EllL[[i]])[1])
fitEllR[[i]]=fitAncestralGraph(Model, covList.EllR[[i]],dim(EllR[[i]])[1])
fitEBwlL[[i]]=fitAncestralGraph(Model, covList.EBwlL[[i]],dim(EBwlL[[i]])[1])
fitEBwlR[[i]]=fitAncestralGraph(Model, covList.EBwlR[[i]],dim(EBwlR[[i]])[1])
fitEMwlL[[i]]=fitAncestralGraph(Model,covList.EMwlL[[i]],dim(EMwlL[[i]])[1])
fitEMwlR[[i]]=fitAncestralGraph(Model,covList.EMwlR[[i]],dim(EMwlR[[i]])[1])
fitESwlL[[i]]=fitAncestralGraph(Model,covList.ESwlL[[i]],dim(ESwlL[[i]])[1])
fitESwlR[[i]]=fitAncestralGraph(Model,covList.ESwlR[[i]],dim(ESwlR[[i]])[1])
}
# beta
beta.EwwL = matrix(,length(yDat),length(ag.theta(fitEwwL[[1]])))
beta.EwwR = matrix(,length(yDat),length(ag.theta(fitEwwR[[1]])))
beta.EllL = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EllR = matrix(,length(yDat),length(ag.theta(fitEllL[[1]])))
beta.EBwlL = matrix(,length(yDat),length(ag.theta(fitEBwlL[[1]])))
beta.EBwlR = matrix(,length(yDat),length(ag.theta(fitEBwlR[[1]])))
beta.EMwlL = matrix(,length(yDat),length(ag.theta(fitEMwlL[[1]])))
beta.EMwlR = matrix(,length(yDat),length(ag.theta(fitEMwlR[[1]])))
beta.ESwlL = matrix(,length(yDat),length(ag.theta(fitESwlL[[1]])))
beta.ESwlR = matrix(,length(yDat),length(ag.theta(fitESwlR[[1]])))
for (i in 1:length(yDat))
{
beta.EwwL[i,] = ag.theta(fitEwwL[[i]])
beta.EwwR[i,] = ag.theta(fitEwwR[[i]])
beta.EllL[i,] = ag.theta(fitEllL[[i]])
beta.EllR[i,] = ag.theta(fitEllR[[i]])
beta.EBwlL[i,] = ag.theta(fitEBwlL[[i]])
beta.EBwlR[i,] = ag.theta(fitEBwlR[[i]])
beta.EMwlL[i,] = ag.theta(fitEMwlL[[i]])
beta.EMwlR[i,] = ag.theta(fitEMwlR[[i]])
beta.ESwlL[i,] = ag.theta(fitESwlL[[i]])
beta.ESwlR[i,] = ag.theta(fitESwlR[[i]])
}
fitESwlR
sessionInfo()
?fitAn
fitAncestralGraph()
fitAncestralGraph
sessionInfo()
Model
?makeMG
?makeMG
?makeMG
makeMG
fitAncestralGraph
icfmag
covList.EwwL
fitAncestralGraph
dim(EwwL[[i]])[1]
9*9
models
model
load(paste(dir_data,"/Singletrial_connectivityinputAG_RLtest.rdat",sep='')) # no-ftest
rm(list=ls())
# set datadir Base
dir_base="/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel"
#dir AG_codes, example_codes,
dir_agcodes=paste(dir_base,'/AG_codes',sep='')
dir_excodes=paste(dir_base,'/Fit_codes',sep='')
dir_data=paste(dir_base,'/Fit_data',sep='')
dir_output=paste(dir_base,'/Fit_output',sep='')
load(paste(dir_data,"/Singletrial_connectivityinputAG_RLtest.rdat",sep='')) # no-ftest
yDat[[1]][1:5,]
getwd()
load("/Users/sarajahfari/Github/Control_Conflict/AG/Fitmodel/Fit_output/ConncetivityStrength_withBIC7models_MnoF.rdat")
load('./Processed_data/Behavior_Qpar.Rdat') # load summarized behavior and Qlearning estimates
load('./AG/Fitmodel/Fit_output/ConncetivityStrength_withBIC7models_MnoF.rdat')
setw(.)
setwd(.)
setwd('.')
getwd()
setwd('/Users/sarajahfari/Github/Control_Conflict/Code')
setwd('/Users/sarajahfari/Github/Control_Conflict/')
load('./AG/Fitmodel/Fit_output/ConncetivityStrength_withBIC7models_MnoF.rdat')
rm(list=ls())
load('./AG/Fitmodel/Fit_output/ConncetivityStrength_withBIC7models_MnoF.rdat')
BMT
t(BMT[1:7,])
t(BMT[,1:7])
round(t(BMT[,1:7]),digits=0)
